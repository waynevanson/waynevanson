---
import type { GetStaticPaths } from "astro"
import { getCollection } from "astro:content"
import LayoutBase from "../../../layouts/layout-base.astro"
import { marked } from "marked"
import * as cheerio from "cheerio"
import type { HTMLTag } from "astro/types"

interface Props {
  content: string
  slug: string
  summary: string
  title: string
}

export const getStaticPaths: GetStaticPaths = async () => {
  // Appends these classes to these elements
  const styles: Partial<Record<HTMLTag, string>> = {
    p: "py-2",
    h1: "text-3xl",
    h2: "text-2xl",
    h3: "text-xl",
    h4: "text-lg",
    h5: "text-md",
    h6: "text-sm",
  }

  async function markdownToHtml(markdown: string): Promise<string> {
    const html = await marked(markdown)

    const $ = cheerio.load(html)

    for (const [tag, classes] of Object.entries(styles)) {
      const elements = $(tag)
      elements.attr("class", (attr) => attr + " " + classes)
    }

    return $.html()
  }

  const posts = await getCollection("posts")

  const unresolved = posts.map(async (post) => ({
    params: { slug: post.slug },
    props: {
      ...post.data,
      content: await markdownToHtml(post.body),
      slug: post.slug,
    },
  }))

  return await Promise.all(unresolved)
}

const { content, summary, title } = Astro.props
---

<LayoutBase title={title}>
  <article class="p-2">
    <h1 class="text-7xl">{title}</h1>
    <small class="text-md">{summary}</small>
    <div id="content" class="" set:html={content} />
  </article>
</LayoutBase>
